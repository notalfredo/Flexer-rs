name: docs

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '/benches'
      - '/book'
      - '/src'

env:
  # By default, the project name will be the name of the GitHub repository.
  # this is loaded through the `event` properties, with documentation availble at
  #  - https://docs.github.com/en/actions/using-workflows/triggering-a-workflow#accessing-and-using-event-properties
  #  - https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads
  PROJECT_NAME: ${{ github.event.repository.name }}

  # documentation built from the `rustdoc` CLI tool
  ARTIFACT_API_DOCS: artifact-docs-api
  DIR_SRC_API_DOCS: target/${{ env.PROJECT_NAME }}
  DIR_TARGET_API_DOCS: api-docs

  # documentation built from the `mdbook` CLI tool
  ARTIFACT_MDBOOK: artifact-docs-mdbook
  DIR_SRC_MDBOOK: book/book/html
  DIR_TARGET_MDBOOK: book

  # performance benchmark graphs built from the Criterion library and CLI tool
  ARTIFACT_PERF_BENCH_GRAPHS: artifact-perf-bench-graphs
  DIR_SRC_PERF_BENCH_GRAPHS: target/criterion
  DIR_TARGET_PERF_BENCH_GRAPHS: perf

jobs:
  build-api-docs:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        profile: minimal
    - name: Cache dependencies
      uses: Swatinem/rust-cache@v1.4.0
      with:
        sharedKey: full-build-cache
    - name: Build documentation
      uses: actions-rs/cargo@v1
      with:
        command: doc
        args: --verbose --no-deps --lib
    # mdBook doesn't generate an `index.html` file, however
    # GitHub pages asks for one, so setup a basic HTML URL redirect
    - name: Set index.html file
      run: echo "<meta http-equiv=\"refresh\" content=\"0; url=$PROJECT_NAME\">" > target/doc/index.html
    # Upload artifact so all documentation artifacts can be synced
    - name: Upload artifact to ${{ env.DIR_SRC_API_DOCS }}
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.ARTIFACT_API_DOCS }}
        path: ${{ env.DIR_SRC_API_DOCS }}

  build-mdbook:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: book
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: 'latest'
      - name: Setup mdbook-katex
        uses: magicgh/mdbook-katex-action@v1
        with:
          version: 'latest'
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: 'npm'
          cache-dependency-path: 'book/package-lock.json'
      - name: Install npm dependencies
        run: npm ci
      - name: Lint Markdown files
        run: npm run lint
      - name: Build documentation
        run: npm run build
      # Upload artifact so all documentation artifacts can be synced
      - name: Upload artifact to ${{ env.DIR_SRC_MDBOOK }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_MDBOOK }}
          path: ${{ env.DIR_SRC_MDBOOK }}

  build-perf-bench-graphs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
      # Install Valgrind as a software requirement for Iai
      - name: Install Valgrind
        run: sudo apt install -y valgrind
      - name: Run benchmarks
        uses: actions-rs/cargo@v1
        with:
          command: bench
          args: --no-fail-fast
      # Upload artifact so all documentation artifacts can be synced
      - name: Upload artifact to ${{ env.DIR_SRC_PERF_BENCH_GRAPHS }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_PERF_BENCH_GRAPHS }}
          path: ${{ env.DIR_SRC_PERF_BENCH_GRAPHS }}

  deploy-docs:
    if: ${{ success() }}
    needs:
      - build-api-docs
      - build-mdbook
      - build-perf-bench-graphs
    runs-on: ubuntu-latest
    steps:
      - name: Download workflow artifacts
        uses: actions/download-artifact@v3
        with:
          path: docs

  ci-success:
    if: ${{ success() }}
    needs:
      - deploy-docs
    runs-on: ubuntu-latest
    steps:
      - name: âœ… CI succeeded
        run: exit 0
